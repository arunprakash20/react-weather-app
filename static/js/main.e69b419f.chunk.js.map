{"version":3,"sources":["modules/CityComponent.js","modules/WeatherInfoComponent.js","App.js","index.js"],"names":["SearchBox","styled","form","ChooseCityLabel","span","WelcomeWeatherLogo","img","CityComponent","props","updateCity","fetchWeather","src","onSubmit","onChange","e","target","value","placeholder","autoFocus","required","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","Location","Condition","WeatherInfoLabel","WeatherIcon","WeatherContainer","div","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","Button","button","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","WeatherIcons","sys","country","Date","getHours","getMinutes","speed","onClick","window","location","reload","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","Axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e69b419f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst SearchBox = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  margin: 20px;\r\n  border: black solid 1px;\r\n  border-radius: 2px;\r\n\r\n  & input {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    border: none;\r\n    outline: none;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n  & button {\r\n    background-color: black;\r\n    font-size: 14px;\r\n    padding: 0 10px;\r\n    color: white;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-family: Montserrat;\r\n    font-weight: bold;\r\n  }\r\n`;\r\nconst ChooseCityLabel = styled.span`\r\n  color: black;\r\n  margin: 10px auto;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\nconst WelcomeWeatherLogo = styled.img`\r\n  width: 140px;\r\n  height: 140px;\r\n  margin: 40px auto;\r\n`;\r\nconst CityComponent = (props) => {\r\n  const { updateCity, fetchWeather } = props;\r\n  return (\r\n    <>\r\n      <WelcomeWeatherLogo src={\"/react-weather-app/icons/perfect-day.svg\"} />\r\n      <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\r\n      <SearchBox onSubmit={fetchWeather}>\r\n        <input\r\n          onChange={(e) => updateCity(e.target.value)}\r\n          placeholder=\"City\"\r\n          autoFocus\r\n          required\r\n        />\r\n        <button type={\"submit\"}>Search</button>\r\n      </SearchBox>\r\n    </>\r\n  );\r\n};\r\nexport default CityComponent;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { WeatherIcons } from \"../App\";\r\n\r\nexport const WeatherInfoIcons = {\r\n  sunset: \"/react-weather-app/icons/temp.svg\",\r\n  sunrise: \"/react-weather-app/icons/temp.svg\",\r\n  humidity: \"/react-weather-app/icons/humidity.svg\",\r\n  wind: \"/react-weather-app/icons/wind.svg\",\r\n  pressure: \"/react-weather-app/icons/pressure.svg\",\r\n};\r\nconst Location = styled.span`\r\n  margin: 15px auto;\r\n  text-transform: capitalize;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n`;\r\nconst Condition = styled.span`\r\n  margin: 20px auto;\r\n  text-transform: capitalize;\r\n  font-size: 14px;\r\n  & span {\r\n    font-size: 28px;\r\n  }\r\n`;\r\nconst WeatherInfoLabel = styled.span`\r\n  margin: 20px 25px 10px;\r\n  text-transform: capitalize;\r\n  text-align: start;\r\n  width: 90%;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n`;\r\nconst WeatherIcon = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 5px auto;\r\n`;\r\nconst WeatherContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 30px auto;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  margin: 5px 10px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\nconst Button = styled.button`\r\n  background-color: black;\r\n  font-size: 14px;\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  color: white;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  font-family: Montserrat;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n  const { name, value } = props;\r\n  return (\r\n    <InfoContainer>\r\n      <InfoIcon src={WeatherInfoIcons[name]} />\r\n      <InfoLabel>\r\n        {value}\r\n        <span>{name}</span>\r\n      </InfoLabel>\r\n    </InfoContainer>\r\n  );\r\n};\r\nconst WeatherComponent = (props) => {\r\n  const { weather } = props;\r\n  const isDay = weather?.weather[0].icon?.includes(\"d\");\r\n  const getTime = (timeStamp) => {\r\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(\r\n      timeStamp * 1000\r\n    ).getMinutes()}`;\r\n  };\r\n  return (\r\n    <>\r\n      <WeatherContainer>\r\n        <Condition>\r\n          <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\r\n          {`  |  ${weather?.weather[0].description}`}\r\n        </Condition>\r\n        <WeatherIcon src={WeatherIcons[weather?.weather[0].icon]} />\r\n      </WeatherContainer>\r\n      <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n\r\n      <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n      <WeatherInfoContainer>\r\n        <WeatherInfoComponent\r\n          name={isDay ? \"sunset\" : \"sunrise\"}\r\n          value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}\r\n        />\r\n        <WeatherInfoComponent\r\n          name={\"humidity\"}\r\n          value={weather?.main?.humidity}\r\n        />\r\n        <WeatherInfoComponent name={\"wind\"} value={weather?.wind?.speed} />\r\n        <WeatherInfoComponent\r\n          name={\"pressure\"}\r\n          value={weather?.main?.pressure}\r\n        />\r\n      </WeatherInfoContainer>\r\n      <Button onClick={() => window.location.reload(false)}>New Search</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherComponent;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Axios from \"axios\";\r\nimport CityComponent from \"./modules/CityComponent\";\r\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\r\n\r\nexport const WeatherIcons = {\r\n  \"01d\": \"/react-weather-app/icons/sunny.svg\",\r\n  \"01n\": \"/react-weather-app/icons/night.svg\",\r\n  \"02d\": \"/react-weather-app/icons/day.svg\",\r\n  \"02n\": \"/react-weather-app/icons/cloudy-night.svg\",\r\n  \"03d\": \"/react-weather-app/icons/cloudy.svg\",\r\n  \"03n\": \"/react-weather-app/icons/cloudy.svg\",\r\n  \"04d\": \"/react-weather-app/icons/perfect-day.svg\",\r\n  \"04n\": \"/react-weather-app/icons/cloudy-night.svg\",\r\n  \"09d\": \"/react-weather-app/icons/rain.svg\",\r\n  \"09n\": \"/react-weather-app/icons/rain-night.svg\",\r\n  \"10d\": \"/react-weather-app/icons/rain.svg\",\r\n  \"10n\": \"/react-weather-app/icons/rain-night.svg\",\r\n  \"11d\": \"/react-weather-app/icons/storm.svg\",\r\n  \"11n\": \"/react-weather-app/icons/storm.svg\",\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 420px;\r\n  padding: 20px 10px;\r\n  margin: auto;\r\n  border-radius: 4px;\r\n  box-shadow: 0 3px 6px 0 #555;\r\n  background: white;\r\n  font-family: Montserrat;\r\n`;\r\n\r\nconst AppLabel = styled.span`\r\n  color: black;\r\n  margin: 20px auto;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nfunction App() {\r\n  const [city, updateCity] = useState();\r\n  const [weather, updateWeather] = useState();\r\n  const fetchWeather = async (e) => {\r\n    e.preventDefault();\r\n    const response = await Axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`\r\n    );\r\n    updateWeather(response.data);\r\n  };\r\n  return (\r\n    <Container>\r\n      <AppLabel>React Weather App</AppLabel>\r\n      {city && weather ? (\r\n        <WeatherComponent weather={weather} city={city} />\r\n      ) : (\r\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}